name: Push to Feature Branch

on:
  push:
    branches:
      - '*'
      - '!main'

env:
  TF_LOG: INFO
  TF_INPUT: false

jobs: 
  check-code:
    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    # Set the working directory to vnet for the config files
    defaults:
        run:
          shell: bash
          working-directory: ./

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the selected version of Terraform CLI 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ secrets.TERRAFORM_VERSION }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        KEY: ${{ secrets.KEY }}
        BUCKET: ${{ secrets.BUCKET }}
        REGION: ${{ secrets.REGION }}
      run: terraform init -backend-config="key=$KEY" -backend-config="bucket=$BUCKET" -backend-config="region=$REGION"

    # Run a terraform fmt to check syntax
    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    # Run a terraform validate
    - name: Terraform Validate
      id: validate
      # Run even if formatting fails
      if: success() || failure()
      run: terraform validate -no-color